name: Unbound CI

on:
  push:
    branches:
      - main

permissions:
  contents: write  # Required to create a release.

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v3
    
    # Read version from VERSION file
    - name: Read VERSION
      id: version
      run: echo "version=$(cat VERSION)" >> $GITHUB_ENV

    # Set up QEMU for cross-compilation
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push the multi-arch image
    - name: Build and Push
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        tags: |
          chandanghosh/unbound-docker:${{ env.version }}
          chandanghosh/unbound-docker:latest
    
    # Check if release exists
    - name: Check if release exists
      id: check_release
      run: |
        curl -s -o /dev/null -w "%{http_code}" \
        -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
        https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ env.version }} \
        | grep -q 200 && echo "exists=true" >> $GITHUB_ENV || echo "exists=false" >> $GITHUB_ENV

    # Create a GitHub release
    - name: Create GitHub Release
      if: env.exists == 'false'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.version }}
        release_name: Release v${{ env.version }}
        draft: false
        prerelease: false
        body: |
          ## Changes in this release
          - Built and pushed Docker image for version `chandanghosh/unbound-docker:${{ env.version }}`

